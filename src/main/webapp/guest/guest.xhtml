<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html">
    <h:head>
        <title>OrcaTrak - Guest</title>
    </h:head>
    <h:body>
        <h5><b>In flow? #{null != facesContext.application.flowHandler.currentFlow ? "Yes" : "No"}</b></h5>
        <h5>Flow Id is #{null != facesContext.application.flowHandler.currentFlow.id ? 
                         facesContext.application.flowHandler.currentFlow.id : "null"}</h5> 
        <hr/>
        <h5>You are signed in as a #{facesContext.application.flowHandler.currentFlow.id}</h5>
        <h5>What would you like to do:</h5>

        <h:form prependId="false">
            
            <h:commandButton value="Back" action="back-to-booking"/>

            <!-- use this as follows action="/guest/register.xhtml" or alternatively use action="register-Id" if you use the latter you must define a viewNode in the defineFlow method contained within the flow class Guest.class -->
            <h:commandButton value="Register" action="register-Id"/> 

            <!-- TODO:: try using actionListener but will need programmatic code-->
            
            <!-- use this as follows action="/quote.xhtml" or alternatively use action="quote-Id" if you use the latter you must define a viewNode in the defineFlow method contained within the flow class Guest.class /quote.xhtml quote-Id flowBuilder.viewNode("quote-Id",  "/" + flowId + "/quote.xhtml"); failing to follow this procedure will result in the following error Unable to find matching navigation case with from-view-id '/guest/guest.xhtml' for action 'quote-Id' with outcome 'quote-Id' -->
            <h:commandButton value="Get quote" action="/guest/quote.xhtml"/>  
        </h:form>
    </h:body>
</html>


<!--

1-  
focus on the implicit object, flowScope; from EL3.0, the flowScope implicit object indicates the current flow and is used for sharing data through the entire flow and maps to facesContext.getApplication().getFlowHandler().getCurrentFlowScope()
        
        
        
           

-->